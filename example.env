###########################################################################################
#
# Logs and debug
#
###########################################################################################
DEBUG=false
DJANGO_ADMIN_LOGS_ENABLED=False

###########################################################################################
#
# Database credentials
#
###########################################################################################
# These variables are setting up the postgres container
POSTGRES_USER=my_postgres_user
POSTGRES_PASSWORD=my_postgress_password
POSTGRES_DB=ip2tor_shop

# These variables are for the django app
# If using the postgres database, then we need to fill the URL with the same values as above
DATABASE_URL="postgres://my_postgres_user:my_postgress_password@postgres:5432/ip2tor_shop"

###########################################################################################
#
# Email server credentials
# See config rules here https://pypi.org/project/dj-email-url/
#
###########################################################################################

EMAIL_URL="submission://user:password@smtp.exmaple.com:587/?_server_email=noreply@myweb.com&_default_from_email=webmaster@myweb.com"

###########################################################################################
#
# Superuser
#
###########################################################################################

DJANGO_SUPERUSER_NAME="MY_SHOP_ADMIN"
DJANGO_SUPERUSER_PASSWORD="MY_ADMIN_PASSWORD"
DJANGO_SUPERUSER_EMAIL="admin@email.com"

###########################################################################################
#
# Operator user
# We will assign the Hosts to this user
#
###########################################################################################

DJANGO_OPERATOR_NAME="operator"
DJANGO_OPERATOR_PASSWORD="operator_password"
DJANGO_OPERATOR_EMAIL="operator@shop.com"

###########################################################################################
#
# The first site we register in Django, so we can link the host to it
#
###########################################################################################

SHOP_SITE_NAME="IP2TOR SHOP SITE"
SHOP_SITE_DOMAIN=my_ip2tor.com

###########################################################################################
#
# Onion address and ports for the shop 
# E.g.
# http://my_ip2tor_shop.com:<SHOP_CLEARNET_HTTP_PORT>
# http://youronionadress.onion:<SHOP_TOR_HTTP_PORT>
#
###########################################################################################

SHOP_ONION_ADDRESS=theonionaddressyougetforyourshop.onion
SHOP_TOR_HTTP_PORT=80 # it can be the same as the clearnet port
SHOP_CLEARNET_HTTP_PORT=80
SHOP_CLEARNET_HTTPS_PORT=443
SHOP_LOCALHOST_PORT=8000

###########################################################################################
#
# HTTP Port (used by gunicorn)
# This is the port through which nginx will connect to the django http server
#
###########################################################################################

DJANGO_HTTP_PORT=8002

###########################################################################################
#
# Daphne Port (used by daphne)
# This is the port through which nginx will connect to the django daphne server
#
###########################################################################################

DJANGO_DAPHNE_PORT=8001

###########################################################################################
#
# Node registration
# Will add nodes to the Shop at initialization
#
###########################################################################################

# These are the classes that implement the LndNode class (see file charged/lnnode/models/lnd.py)
# Do not touch it unless you know what you are doing
CHARGED_LNDNODE_IMPLEMENTING_CLASSES=LndGRpcNode,LndRestNode
# These are the standard ports for those interfaces. Used in tests to create random nodes
CHARGED_LND_PORT_REST=8080
CHARGED_LND_PORT_GRPC=10009

# Allow or block the option to edit "TLS Verification" from admin pages
CHARGED_LND_TLS_VERIFICATION_EDITABLE=False

# True or False, depending if you want to register this node host automatically based on the env variables below
CHARGED_LND1_REGISTER=True
# Username of the owner. The user must exist and usually it should be the same as DJANGO_OPERATOR_NAME
CHARGED_LND1_OWNER=operator
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND1_CLASS=LndRestNode
CHARGED_LND1_CLASS=LndGRpcNode
# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND1_HOST=
# The port of the LND node
CHARGED_LND1_PORT=
# This is taken into account if the CHARGED_LND1_HOST is an onion address and the node is GRPC
# At the moment, onion addresses are not resolved for nodes and do not work in the shop, so this is useless
CHARGED_LND1_HTTP_PROXY=192.168.1.110:9080
# The name must be unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND1_NAME=MyNode@home
# The lower the better. This is to prioritize which node will be used if more than one are available
CHARGED_LND1_PRIORITY=0
# HEX formatted
CHARGED_LND1_MACAROON_ADMIN=
CHARGED_LND1_MACAROON_INVOICE=
CHARGED_LND1_MACAROON_READONLY=
# Boolean (True / False)
CHARGED_LND1_TLS_VERIFICATION=True
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND1_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"

# True or False, depending if you want to register this node host automatically based on the env variables below
CHARGED_LND2_REGISTER=False
# Username of the owner. The user must exist and usually it should be the same as DJANGO_OPERATOR_NAME
CHARGED_LND2_OWNER=operator
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND2_CLASS=LndRestNode
CHARGED_LND2_CLASS=LndGRpcNode
# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND2_HOST=
# The port of the LND node
CHARGED_LND2_PORT=
# This is taken into account if the CHARGED_LND2_HOST is an onion address and the node is GRPC
# At the moment, onion addresses are not resolved for nodes and do not work in the shop, so this is useless
CHARGED_LND2_HTTP_PROXY=192.168.1.110:9080
# The name must be unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND2_NAME=MyNode@home
# The lower the better. This is to prioritize which node will be used if more than one are available
CHARGED_LND2_PRIORITY=1
# HEX formatted
CHARGED_LND2_MACAROON_ADMIN=
CHARGED_LND2_MACAROON_INVOICE=
CHARGED_LND2_MACAROON_READONLY=
# Boolean (True / False)
CHARGED_LND2_TLS_VERIFICATION=True
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND2_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"



# True or False, depending if you want to register this node host automatically based on the env variables below
CHARGED_LND3_REGISTER=False
# Username of the owner. The user must exist and usually it should be the same as DJANGO_OPERATOR_NAME
CHARGED_LND3_OWNER=operator
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND3_CLASS=LndRestNode
CHARGED_LND3_CLASS=LndGRpcNode
# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND3_HOST=
# The port of the LND node
CHARGED_LND3_PORT=
# This is taken into account if the CHARGED_LND3_HOST is an onion address and the node is GRPC
# At the moment, onion addresses are not resolved for nodes and do not work in the shop, so this is useless
CHARGED_LND3_HTTP_PROXY=192.168.1.110:9080
# The name must be unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND3_NAME=MyNode@home
# The lower the better. This is to prioritize which node will be used if more than one are available
CHARGED_LND3_PRIORITY=2
# HEX formatted
CHARGED_LND3_MACAROON_ADMIN=
CHARGED_LND3_MACAROON_INVOICE=
CHARGED_LND3_MACAROON_READONLY=
# Boolean (True / False)
CHARGED_LND3_TLS_VERIFICATION=True
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND3_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"

# True or False, depending if you want to register this node host automatically based on the env variables below
CHARGED_LND4_REGISTER=False
# Username of the owner. The user must exist and usually it should be the same as DJANGO_OPERATOR_NAME
CHARGED_LND4_OWNER=operator
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND4_CLASS=LndRestNode
CHARGED_LND4_CLASS=LndGRpcNode
# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND4_HOST=
# The port of the LND node
CHARGED_LND4_PORT=
# This is taken into account if the CHARGED_LND4_HOST is an onion address and the node is GRPC
# At the moment, onion addresses are not resolved for nodes and do not work in the shop, so this is useless
CHARGED_LND4_HTTP_PROXY=192.168.1.110:9080
# The name must be unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND4_NAME=MyNode@home
# The lower the better. This is to prioritize which node will be used if more than one are available
CHARGED_LND4_PRIORITY=3
# HEX formatted
CHARGED_LND4_MACAROON_ADMIN=
CHARGED_LND4_MACAROON_INVOICE=
CHARGED_LND4_MACAROON_READONLY=
# Boolean (True / False)
CHARGED_LND4_TLS_VERIFICATION=True
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND4_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"


# True or False, depending if you want to register this node host automatically based on the env variables below
CHARGED_LND5_REGISTER=False
# Username of the owner. The user must exist and usually it should be the same as DJANGO_OPERATOR_NAME
CHARGED_LND5_OWNER=operator
# At the moment, the only accepted values are LndGRpcNode or LndRestNode (see implementation in charged.lnnode.models.py)
#CHARGED_LND5_CLASS=LndRestNode
CHARGED_LND5_CLASS=LndGRpcNode
# Either an IP or an onion address (DO NOT include the port)
CHARGED_LND5_HOST=
# The port of the LND node
CHARGED_LND5_PORT=
# This is taken into account if the CHARGED_LND5_HOST is an onion address and the node is GRPC
# At the moment, onion addresses are not resolved for nodes and do not work in the shop, so this is useless
CHARGED_LND5_HTTP_PROXY=192.168.1.110:9080
# The name must be unique, that is, we will check if another node exists with the same name and if it does, then we don't create a new instance.
CHARGED_LND5_NAME=MyNode@home
# The lower the better. This is to prioritize which node will be used if more than one are available
CHARGED_LND5_PRIORITY=4
# HEX formatted
CHARGED_LND5_MACAROON_ADMIN=
CHARGED_LND5_MACAROON_INVOICE=
CHARGED_LND5_MACAROON_READONLY=
# Boolean (True / False)
CHARGED_LND5_TLS_VERIFICATION=True
# PEM Formatted, add text here. For some reason, if you add it in one line, there is an error, so you need to keep the BEGIN and END lines separate
CHARGED_LND5_TLS_CERTIFICATE="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"

###########################################################################################
#
# This is a certificate for tests only
# PEM Formatted cert that is syntactically valid but is not good enough for the node
#
###########################################################################################
# PEM Formatted cert that is syntactically valid but is not good enough for the node
CHARGED_LND_TLS_INVALID_CERTIFICATE_FOR_TESTS="-----BEGIN CERTIFICATE-----
ASDFASDFADSF...ASDFASDF=
-----END CERTIFICATE-----"

###########################################################################################
#
# Host registration (optional) 
# Register a few Hosts on starting up (if a host exists already based on name and ip, won't do anything)
#
###########################################################################################

# When a bridge is created, it will be active the time is configured in the host plus this extra time
# At the moment, this only applies to creation, not extension
# This applies to all hosts registered and it is measured in seconds
SHOP_BRIDGE_DURATION_GRACE_TIME=600

# True or False, depending if you want to register the first host automatically based on the env variables below
SHOP_HOST1_REGISTER=True
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST1_NAME=host1
SHOP_HOST1_DESCRIPTION=""
SHOP_HOST1_IP=192.168.0.111
SHOP_HOST1_PORT_RANGE_TYPE=T
SHOP_HOST1_PORT_RANGES=21212,21221:30100,30150
SHOP_HOST1_IS_ENABLED=True
SHOP_HOST1_IS_ALIVE=False
SHOP_HOST1_IS_TESTNET=False
SHOP_HOST1_IS_TESTHOST=False
SHOP_HOST1_OFFERS_TOR_BRIDGES=True
SHOP_HOST1_TOR_BRIDGE_DURATION=86400
SHOP_HOST1_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST1_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST1_OFFERS_NOSTR_ALIASES=False
SHOP_HOST1_NOSTR_ALIAS_PORT=80
SHOP_HOST1_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST1_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST1_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST1_OFFERS_RSSH_TUNNELS=False
SHOP_HOST1_RSSH_TUNNEL_PRICE=1000
SHOP_HOST1_TERMS_OF_SERVICE=""
SHOP_HOST1_TERMS_OF_SERVICE_URL=""
SHOP_HOST1_CI_STATUS=0
SHOP_HOST1_CI_DATE="2022-12-19 00:00"
SHOP_HOST1_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST1_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the SECOND host automatically based on the env variables below
SHOP_HOST2_REGISTER=False
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST2_NAME=host2
SHOP_HOST2_DESCRIPTION=""
SHOP_HOST2_IP=192.168.0.111
SHOP_HOST2_PORT_RANGE_TYPE=T
SHOP_HOST2_PORT_RANGES=21212,21221
SHOP_HOST2_IS_ENABLED=True
SHOP_HOST2_IS_ALIVE=False
SHOP_HOST2_IS_TESTNET=False
SHOP_HOST2_IS_TESTHOST=False
SHOP_HOST2_OFFERS_TOR_BRIDGES=True
SHOP_HOST2_TOR_BRIDGE_DURATION=86400
SHOP_HOST2_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST2_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST2_OFFERS_NOSTR_ALIASES=False
SHOP_HOST2_NOSTR_ALIAS_PORT=80
SHOP_HOST2_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST2_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST2_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST2_OFFERS_RSSH_TUNNELS=False
SHOP_HOST2_RSSH_TUNNEL_PRICE=1000
SHOP_HOST2_TERMS_OF_SERVICE=""
SHOP_HOST2_TERMS_OF_SERVICE_URL=""
SHOP_HOST2_CI_STATUS=0
SHOP_HOST2_CI_DATE="2022-12-19 00:00"
SHOP_HOST2_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST2_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the SECOND host automatically based on the env variables below
SHOP_HOST3_REGISTER=False
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST3_NAME=host3
SHOP_HOST3_DESCRIPTION=""
SHOP_HOST3_IP=192.168.0.111
SHOP_HOST3_PORT_RANGE_TYPE=T
SHOP_HOST3_PORT_RANGES=21212,21221
SHOP_HOST3_IS_ENABLED=True
SHOP_HOST3_IS_ALIVE=False
SHOP_HOST3_IS_TESTNET=False
SHOP_HOST3_IS_TESTHOST=False
SHOP_HOST3_OFFERS_TOR_BRIDGES=True
SHOP_HOST3_TOR_BRIDGE_DURATION=86400
SHOP_HOST3_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST3_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST3_OFFERS_NOSTR_ALIASES=False
SHOP_HOST3_NOSTR_ALIAS_PORT=80
SHOP_HOST3_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST3_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST3_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST3_OFFERS_RSSH_TUNNELS=False
SHOP_HOST3_RSSH_TUNNEL_PRICE=1000
SHOP_HOST3_TERMS_OF_SERVICE=""
SHOP_HOST3_TERMS_OF_SERVICE_URL=""
SHOP_HOST3_CI_STATUS=0
SHOP_HOST3_CI_DATE="2022-12-19 00:00"
SHOP_HOST3_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST3_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the SECOND host automatically based on the env variables below
SHOP_HOST4_REGISTER=False
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST4_NAME=host4
SHOP_HOST4_DESCRIPTION=""
SHOP_HOST4_IP=192.168.0.111
SHOP_HOST4_PORT_RANGE_TYPE=T
SHOP_HOST4_PORT_RANGES=21212,21221
SHOP_HOST4_IS_ENABLED=True
SHOP_HOST4_IS_ALIVE=False
SHOP_HOST4_IS_TESTNET=False
SHOP_HOST4_IS_TESTHOST=False
SHOP_HOST4_OFFERS_TOR_BRIDGES=True
SHOP_HOST4_TOR_BRIDGE_DURATION=86400
SHOP_HOST4_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST4_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST4_OFFERS_NOSTR_ALIASES=False
SHOP_HOST4_NOSTR_ALIAS_PORT=80
SHOP_HOST4_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST4_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST4_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST4_OFFERS_RSSH_TUNNELS=False
SHOP_HOST4_RSSH_TUNNEL_PRICE=1000
SHOP_HOST4_TERMS_OF_SERVICE=""
SHOP_HOST4_TERMS_OF_SERVICE_URL=""
SHOP_HOST4_CI_STATUS=0
SHOP_HOST4_CI_DATE="2022-12-19 00:00"
SHOP_HOST4_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST4_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the SECOND host automatically based on the env variables below
SHOP_HOST5_REGISTER=False
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST5_NAME=host5
SHOP_HOST5_DESCRIPTION=""
SHOP_HOST5_IP=192.168.0.111
SHOP_HOST5_PORT_RANGE_TYPE=T
SHOP_HOST5_PORT_RANGES=21212,21221
SHOP_HOST5_IS_ENABLED=True
SHOP_HOST5_IS_ALIVE=False
SHOP_HOST5_IS_TESTNET=False
SHOP_HOST5_IS_TESTHOST=False
SHOP_HOST5_OFFERS_TOR_BRIDGES=True
SHOP_HOST5_TOR_BRIDGE_DURATION=86400
SHOP_HOST5_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST5_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST5_OFFERS_NOSTR_ALIASES=False
SHOP_HOST5_NOSTR_ALIAS_PORT=80
SHOP_HOST5_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST5_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST5_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST5_OFFERS_RSSH_TUNNELS=False
SHOP_HOST5_RSSH_TUNNEL_PRICE=1000
SHOP_HOST5_TERMS_OF_SERVICE=""
SHOP_HOST5_TERMS_OF_SERVICE_URL=""
SHOP_HOST5_CI_STATUS=0
SHOP_HOST5_CI_DATE="2022-12-19 00:00"
SHOP_HOST5_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST5_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the SECOND host automatically based on the env variables below
SHOP_HOST6_REGISTER=False
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST1_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST6_NAME=host6
SHOP_HOST6_DESCRIPTION=""
SHOP_HOST6_IP=192.168.0.111
SHOP_HOST6_PORT_RANGE_TYPE=T
SHOP_HOST6_PORT_RANGES=21212,21221
SHOP_HOST6_IS_ENABLED=True
SHOP_HOST6_IS_ALIVE=False
SHOP_HOST6_IS_TESTNET=False
SHOP_HOST6_IS_TESTHOST=False
SHOP_HOST6_OFFERS_TOR_BRIDGES=True
SHOP_HOST6_TOR_BRIDGE_DURATION=86400
SHOP_HOST6_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST6_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST6_OFFERS_NOSTR_ALIASES=False
SHOP_HOST6_NOSTR_ALIAS_PORT=80
SHOP_HOST6_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST6_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST6_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST6_OFFERS_RSSH_TUNNELS=False
SHOP_HOST6_RSSH_TUNNEL_PRICE=1000
SHOP_HOST6_TERMS_OF_SERVICE=""
SHOP_HOST6_TERMS_OF_SERVICE_URL=""
SHOP_HOST6_CI_STATUS=0
SHOP_HOST6_CI_DATE="2022-12-19 00:00"
SHOP_HOST6_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST6_BRIDGE_BANDWIDTH_INITIAL=1073741824


# True or False, depending if you want to register the first host automatically based on the env variables below
SHOP_HOST7_REGISTER=True
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST7_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST7_NAME=host7
SHOP_HOST7_DESCRIPTION=""
SHOP_HOST7_IP=192.168.0.111
SHOP_HOST7_PORT_RANGE_TYPE=T
SHOP_HOST7_PORT_RANGES=21212,21221:30100,30150
SHOP_HOST7_IS_ENABLED=True
SHOP_HOST7_IS_ALIVE=False
SHOP_HOST7_IS_TESTNET=False
SHOP_HOST7_IS_TESTHOST=False
SHOP_HOST7_OFFERS_TOR_BRIDGES=True
SHOP_HOST7_TOR_BRIDGE_DURATION=86400
SHOP_HOST7_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST7_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST7_OFFERS_NOSTR_ALIASES=False
SHOP_HOST7_NOSTR_ALIAS_PORT=80
SHOP_HOST7_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST7_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST7_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST7_OFFERS_RSSH_TUNNELS=False
SHOP_HOST7_RSSH_TUNNEL_PRICE=1000
SHOP_HOST7_TERMS_OF_SERVICE=""
SHOP_HOST7_TERMS_OF_SERVICE_URL=""
SHOP_HOST7_CI_STATUS=0
SHOP_HOST7_CI_DATE="2022-12-19 00:00"
SHOP_HOST7_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST7_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the first host automatically based on the env variables below
SHOP_HOST8_REGISTER=True
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST8_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST8_NAME=host8
SHOP_HOST8_DESCRIPTION=""
SHOP_HOST8_IP=192.168.0.111
SHOP_HOST8_PORT_RANGE_TYPE=T
SHOP_HOST8_PORT_RANGES=21212,21221:30100,30150
SHOP_HOST8_IS_ENABLED=True
SHOP_HOST8_IS_ALIVE=False
SHOP_HOST8_IS_TESTNET=False
SHOP_HOST8_IS_TESTHOST=False
SHOP_HOST8_OFFERS_TOR_BRIDGES=True
SHOP_HOST8_TOR_BRIDGE_DURATION=86400
SHOP_HOST8_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST8_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST8_OFFERS_NOSTR_ALIASES=False
SHOP_HOST8_NOSTR_ALIAS_PORT=80
SHOP_HOST8_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST8_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST8_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST8_OFFERS_RSSH_TUNNELS=False
SHOP_HOST8_RSSH_TUNNEL_PRICE=1000
SHOP_HOST8_TERMS_OF_SERVICE=""
SHOP_HOST8_TERMS_OF_SERVICE_URL=""
SHOP_HOST8_CI_STATUS=0
SHOP_HOST8_CI_DATE="2022-12-19 00:00"
SHOP_HOST8_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST8_BRIDGE_BANDWIDTH_INITIAL=1073741824

# True or False, depending if you want to register the first host automatically based on the env variables below
SHOP_HOST9_REGISTER=True
# This host will be linked to 
# - the site we created based on the variables SHOP_SITE_NAME, SHOP_SITE_DOMAIN
# - the operator user we created based on the variables DJANGO_OPERATOR_NAME, DJANGO_OPERATOR_PASSWORD, DJANGO_OPERATOR_EMAIL
# As many PortRange(s) as defined in SHOP_HOST9_PORT_RANGES. These will have the format:
# SHOP_HOSTX_PORT_RANGES=<start_port>,<end_port>:<start_port>,<end_port>:<start_port>,<end_port>
SHOP_HOST9_NAME=host9
SHOP_HOST9_DESCRIPTION=""
SHOP_HOST9_IP=192.168.0.111
SHOP_HOST9_PORT_RANGE_TYPE=T
SHOP_HOST9_PORT_RANGES=21212,21221:30100,30150
SHOP_HOST9_IS_ENABLED=True
SHOP_HOST9_IS_ALIVE=False
SHOP_HOST9_IS_TESTNET=False
SHOP_HOST9_IS_TESTHOST=False
SHOP_HOST9_OFFERS_TOR_BRIDGES=True
SHOP_HOST9_TOR_BRIDGE_DURATION=86400
SHOP_HOST9_TOR_BRIDGE_PRICE_INITIAL=25000
SHOP_HOST9_TOR_BRIDGE_PRICE_EXTENSION=20000
SHOP_HOST9_OFFERS_NOSTR_ALIASES=False
SHOP_HOST9_NOSTR_ALIAS_PORT=80
SHOP_HOST9_NOSTR_ALIAS_DURATION=2592000
SHOP_HOST9_NOSTR_ALIAS_PRICE_INITIAL=25000000
SHOP_HOST9_NOSTR_ALIAS_PRICE_EXTENSION=20000000
SHOP_HOST9_OFFERS_RSSH_TUNNELS=False
SHOP_HOST9_RSSH_TUNNEL_PRICE=1000
SHOP_HOST9_TERMS_OF_SERVICE=""
SHOP_HOST9_TERMS_OF_SERVICE_URL=""
SHOP_HOST9_CI_STATUS=0
SHOP_HOST9_CI_DATE="2022-12-19 00:00"
SHOP_HOST9_CI_MESSAGE="First checkin - Creation of the host"
# Max traffic allowed (bandwidth in bytes) during the duration of this bridge (SHOP_HOSTX_TOR_BRIDGE_DURATION). 
# After this limit is reached, the user can either extend the duration of the bridge (which will add this amount to the remaining)
# or to purchase more bandwith for the bridge (which will directly increase the bandwith remaining, but not the duration)
SHOP_HOST9_BRIDGE_BANDWIDTH_INITIAL=1073741824

###########################################################################################
#
# Ports whitelist
# Comma separated list of port numbers (no spaces)
# If the onion port of the target is in this list, it will not be checked that it is HTTPS
#
###########################################################################################

WHITELISTED_SERVICE_PORTS=8333,9735

###########################################################################################
#
# Sample hidden service
#
# The sample hidden service used for tests. It is a web server returning a simple message with "Hello world" in the title.
# To get the onion address, you need to run this command once the container 'ip2tor-shop-sample-hidden-service' is up and running:
#   docker exec -it ip2tor-shop-sample-hidden-service cat /var/lib/tor/sample_hidden_service/hostname
# You can leave the port as it is, or can change it to another if you wish
# 
# When the container 'ip2tor-shop-sample-hidden-service' is running, the service is reachable from any Tor browser at:
# <SAMPLE_HIDDEN_SERVICE_ONION_ADDRESS>:<SAMPLE_HIDDEN_SERVICE_ONION_PORT>
###########################################################################################

SAMPLE_HIDDEN_SERVICE_ONION_ADDRESS=
# This is the default port for the sample service we create, that will be hidden with the onion address for tests. No need to change this
# IMPORTANT: If there are some connection issues, try first with a port in the whitelisted_service_ports (see lnpurchase/tasks.py)
SAMPLE_HIDDEN_SERVICE_ONION_PORT=11111
SAMPLE_HTTP_SERVICE_PORT=8080


###########################################################################################
#
# Schedules for periodic tasks
#
###########################################################################################

SCHEDULE_NODE_ALIVE_CHECK="*/5 * * * *"
SCHEDULE_HOST_ALIVE_CHECK="*/2 * * * *"
SCHEDULE_SET_NEEDS_DELETE_ON_SUSPENDED_TOR_BRIDGES="0 */5 * * *"
SCHEDULE_SET_NEEDS_DELETE_ON_INITIAL_TOR_BRIDGES="35 * * * *"
SCHEDULE_SET_NEEDS_SUSPEND_ON_EXPIRED_TOR_BRIDGES="10 */5 * * *"
SCHEDULE_DELETE_DUE_TOR_BRIDGES="15 */5 * * *"
SCHEDULE_BACKUP_FILES="0 12 * * *"
SCHEDULE_BACKUP_DB="30 23 * * *"
SCHEDULE_DELETE_OLD_BACKUPS="30 12 * * *"
SCHEDULE_SET_NEEDS_BW_REDIRECT_ON_TOR_BRIDGES_WITH_NO_BANDWIDTH="*/7 * * * *"

###########################################################################################
#
# Waiting days to delete bridges
# The corresponding tasks will set the bridges to "NEED_DELETE" after the time configured here
#
###########################################################################################

DELETE_SUSPENDED_AFTER_THESE_DAYS=45
DELETE_INITIAL_AFTER_THESE_MINUTES=3

###########################################################################################
#
# This describes which percentage of a port range will be considered available.
# A number between 0 and 1
# If 1, all ports will be available
# If 0, no ports will be available
# If 0 < X < 1 , only X% of the ports of a port range will be considered available.
# 
# This applies to each PortRange individually, not to the total sum of ports in PortRanges
#
###########################################################################################

PORT_POOL_AVAILABILITY_MARGIN=1

###########################################################################################
#
# How many days do we keep backup files
#
###########################################################################################

DELETE_OLD_BACKUPS_AFTER_DAYS=30

###########################################################################################
#
# Nostr alias blacklist
#
###########################################################################################
NOSTR_ALIAS_BLACKLIST=www,shop,api,public,hosts,admin,api-auth,charged


###########################################################################################
#
# Social links
# Links to your social networks, in case you want to show them in the landing page
#
###########################################################################################
SOCIAL_GITHUB=
SOCIAL_TWITTER=
SOCIAL_INSTAGRAM=
SOCIAL_FACEBOOK=
SOCIAL_LINKEDIN=

###########################################################################################
#
# CSRF trusted origins (this goes to Django settings)
# Comma separated list of trusted origins. Your site IP / domain, should be there
# Must start with a scheme (usually http:// or https://)
#
###########################################################################################
CSRF_TRUSTED_ORIGINS="http://localhost:8000"

###########################################################################################
#
# Secret key (will be generated automatically and appended at the bottom
# Do not change unless you know what you are doing
# If there are some problems with this, remove the variable after it's been generated and rebuild the whole docker stack
#
###########################################################################################


