version: '3'
services:
  django-http:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: ip2tor-shop-django-http
    hostname: django-http
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/home/ip2tor
    environment:
      CONTAINER_ROLE: "django-http"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${DJANGO_HTTP_PORT}"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - shopnet

  # django-daphne:
  #   build:
  #     context: .
  #     dockerfile: .docker/Dockerfile
  #   container_name: ip2tor-shop-django-daphne
  #   hostname: django-daphne
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s
  #   depends_on:
  #     postgres:
  #       condition: service_started
  #     redis:
  #       condition: service_started
  #     django-http:
  #       # condition: service_healthy
  #       # condition: service_completed_successfully
  #       condition: service_started
  #   volumes:
  #     - .:/home/ip2tor
  #   environment:
  #     CONTAINER_ROLE: "django-daphne"
  #   networks:
  #     - shopnet
  nginx:
    image: nginx
    container_name: ip2tor-shop-nginx
    hostname: nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      django-http:
        condition: service_healthy
        # condition: service_started
      # django-daphne:
        # condition: service_completed_successfully
        # condition: service_started
    ports:
      - ${SHOP_CLEARNET_HTTP_PORT}:${SHOP_CLEARNET_HTTP_PORT}
      - ${SHOP_CLEARNET_HTTPS_PORT}:${SHOP_CLEARNET_HTTPS_PORT}
      - ${SHOP_LOCALHOST_PORT}:${SHOP_LOCALHOST_PORT}
    volumes:
      - ./static:/usr/share/nginx/static
      - ./media:/usr/share/nginx/media
      - .docker/nginx:/etc/nginx/templates
      - ./ssl/${SHOP_SITE_DOMAIN}:/etc/nginx/ssl/${SHOP_SITE_DOMAIN}
      - ./logs/nginx:/var/log/nginx
    environment:
      - SHOP_SITE_DOMAIN=${SHOP_SITE_DOMAIN}
      - DJANGO_HTTP_PORT=${DJANGO_HTTP_PORT}
      - DJANGO_DAPHNE_PORT=${DJANGO_DAPHNE_PORT}
      - SHOP_CLEARNET_HTTP_PORT=${SHOP_CLEARNET_HTTP_PORT}
      - SHOP_CLEARNET_HTTPS_PORT=${SHOP_CLEARNET_HTTPS_PORT}
      - SHOP_LOCALHOST_PORT=${SHOP_LOCALHOST_PORT}
      - SHOP_TOR_HTTP_PORT=${SHOP_TOR_HTTP_PORT}
      - SHOP_ONION_ADDRESS=${SHOP_ONION_ADDRESS}
    networks:
      - shopnet

  celery-beat:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: ip2tor-shop-celery-beat
    hostname: celery-beat
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      django-http:
        # condition: service_completed_successfully
        # condition: service_healthy
        condition: service_started
    volumes:
      - .:/home/ip2tor
    environment:
      CONTAINER_ROLE: "celery-beat"
    networks:
      - shopnet

  celery-worker:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: ip2tor-shop-celery-worker
    hostname: celery-worker
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    depends_on:
      django-http:
        # condition: service_completed_successfully
        # condition: service_healthy
        condition: service_started
    volumes:
      - .:/home/ip2tor
    environment:
      CONTAINER_ROLE: "celery-worker"
    networks:
      - shopnet
  
  # celery-flower:
  #   build:
  #     context: .
  #     dockerfile: .docker/Dockerfile
  #   container_name: ip2tor-shop-celery-flower
  #   hostname: celery-flower
  #   ports:
  #     - 5555:5555
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s
  #   depends_on:
  #     celery-worker:
  #       # condition: service_completed_successfully
  #       # condition: service_healthy
  #       condition: service_started
  #   volumes:
  #     - .:/home/ip2tor
  #   environment:
  #     CONTAINER_ROLE: "celery-flower"
  #   networks:
  #     - shopnet

  redis:
    image: redis:4-alpine
    container_name: ip2tor-shop-redis
    hostname: redis
    volumes:
      - ./redis-data/:/data
    networks:
      - shopnet
  
  postgres:
    image: postgres:12
    container_name: ip2tor-shop-postgres
    hostname: postgres
    env_file:
      - ./.env 
    ports:
      - 5432:5432
    volumes:
      - ./db-data/:/var/lib/postgresql/data/
    networks:
      - shopnet
  
  # To get the Onion address
  # docker exec -it ip2tor-shop-tor cat var/lib/tor/ip2tor-shop_hidden_service/hostname
  tor:
    build:
      context: .
      dockerfile: .docker/tor.Dockerfile
      args:
        SHOP_TOR_HTTP_PORT: ${SHOP_TOR_HTTP_PORT}
    container_name: ip2tor-shop-tor
    depends_on:
      - nginx
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
          - .tor/ip2tor-shop_hidden_service:/var/lib/tor/ip2tor-shop_hidden_service/
    networks:
      - shopnet  
      
  # To get the Onion address
  # docker exec -it ip2tor-shop-sample-hidden-service cat /var/lib/tor/sample_hidden_service/hostname
  # sample-hidden-service:
  #   build:
  #     context: .
  #     dockerfile: .docker/sample-hidden-service/sample-hidden-service.Dockerfile
  #     args:
  #       ONION_PORT: ${SAMPLE_HIDDEN_SERVICE_ONION_PORT}
  #       HTTP_PORT: ${SAMPLE_HTTP_SERVICE_PORT}
  #   container_name: ip2tor-shop-sample-hidden-service
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s
  #   volumes:
  #         - .docker/sample-hidden-service/.tor/sample_hidden_service:/var/lib/tor/sample_hidden_service/
  #   ports:
  #     - ${SAMPLE_HIDDEN_SERVICE_ONION_PORT}:${SAMPLE_HIDDEN_SERVICE_ONION_PORT}
  #   networks:
  #     - shopnet
  
  # sample-http:
  #   build:
  #     context: .
  #     dockerfile: .docker/sample-hidden-service/sample-http.Dockerfile
  #   container_name: ip2tor-shop-sample-http
  #   hostname: sample-http
  #   # This http service is aimed at offering some response from a tests onion address (see sample-hidden-service container). 
  #   # We don't really want to expose this ports unless we intend to test the service via clearnet.
  #   # ports:
  #   #   - ${SAMPLE_HTTP_SERVICE_PORT}:${SAMPLE_HTTP_SERVICE_PORT}
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       max_attempts: 3
  #       window: 120s
  #   networks:
  #     - shopnet

networks:
    shopnet:
        driver: bridge

# volumes:
#   redis:
#     driver: "local"